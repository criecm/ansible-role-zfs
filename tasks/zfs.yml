---
- name: stat dir
  stat:
    path: '{{ zfs.path }}'
  register: dirstat
  when: '"path" in zfs'

- include_vars: zfs.yml

- name: 'zfs {{ zfs.zfsrc }}'
  zfs:
    name: '{{ zfs.zfsrc }}'
    state: present
    origin: '{{ zfs.origin | default(omit) }}'
    extra_zfs_properties: '{{ zfsprops }}'
  register: newzfs

- name: restore from backup if restore==1
  command: '{{ zfs_sync_vol }} -BRCzs {{ zfs.backup_on }} {{ zfs.zfsrc }}'
  when: restore and "backup_on" in zfs and ( not dirstat.stat.exists or newzfs.changed )

- name: chown/mod dir
  file:
    path: '{{ zfs.path }}'
    mode: '{{ zfs.mode | default(omit) }}'
    owner: '{{ zfs.owner | default(omit) }}'
    group: '{{ zfs.group | default(omit) }}'
    state: directory
  when: '"path" in zfs and ( "owner" in zfs or "group" in zfs ) and ( newzfs.changed or reshare | default(False) )'

- name: setfacl
  acl:
    entry: '{{ item }}'
    path: '{{ zfs.path }}'
    use_nfsv4_acls: '{{ nfsv4_acls }}'
    state: present
  with_items: '{{ zfs.acls | default([]) }}'
